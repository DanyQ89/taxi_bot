from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram import Bot, F, Router
from aiogram import Dispatcher
import logging
import asyncio

from aiogram.utils.keyboard import ReplyKeyboardBuilder

from data.database import create_session
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from utils.keyboards import (go_home_main, admin_kb, go_home_driver, go_home_admin)
from sqlalchemy import select
from data.user_form import User
from utils.forms import Form
from data.stats_class import Stats

admin_router = Router(name=__name__)


@admin_router.callback_query(F.data == 'admin')
async def admin_password(query: CallbackQuery, state: FSMContext):
    await query.message.edit_text('üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:', reply_markup=go_home_main())
    await state.set_state(Form.password)


@admin_router.message(Form.password)
async def admin(msg: Message, state: FSMContext):
    try:
        text = msg.text
        if text != 'Darxan2023+':
            await msg.answer('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å', reply_markup=go_home_main())
        else:
            sess = await create_session()
            user = await sess.execute(select(User).filter_by(user_id=str(msg.from_user.id)))
            user = user.scalars().first()
            user.who = 'admin'
            await sess.commit()
            await sess.close()
            await msg.answer('üë®‚Äçüíº –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=admin_kb())
    except Exception as err:
        await msg.message.edit_text('üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:', reply_markup=go_home_main())
        await state.set_state(Form.password)


@admin_router.callback_query(F.data == 'admin_passed')
async def admin_passed(query: CallbackQuery, state: FSMContext):
    await query.message.edit_text('üë®‚Äçüíº –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=admin_kb())


@admin_router.callback_query(F.data == 'stats')
async def stats(query: CallbackQuery, state: FSMContext):
    await query.message.edit_text('üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤:\n'
                                  f'üìÖ –î–µ–Ω—å: {Stats.day}\n'
                                  f'üìÜ –ú–µ—Å—è—Ü: {Stats.month}\n'
                                  f'‚è≥ –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è: {Stats.all}\n', reply_markup=go_home_admin())


@admin_router.callback_query(F.data == 'change_balance_driver')
async def change_balance_driver(query: CallbackQuery, state: FSMContext):
    await query.message.edit_text('üí≥ –í–≤–µ–¥–∏—Ç–µ –∫–∞–∂–¥—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ:\n'
                                  'üë§ –Ω–∏–∫ –≤–æ–¥–∏—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ @123\n'
                                  '‚ûï‚ûñ –æ–ø–µ—Ä–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ +/-\n'
                                  'üí∞ —Å—É–º–º—É –¥–µ–Ω–µ–≥\n'
                                  'üìù –ü—Ä–∏–º–µ—Ä:\n'
                                  '@123\n'
                                  '+\n'
                                  '1000', reply_markup=go_home_admin())

    await state.set_state(Form.change_balance_driver)


@admin_router.message(Form.change_balance_driver)
async def change_balance(msg: Message, state: FSMContext):
    try:
        text = msg.text
        username, operation, amount = text.split('\n')
        if username and operation and amount:
            sess = await create_session()
            print(username)
            user = await sess.execute(select(User).filter_by(username=username[1:]))
            user = user.scalars().first()
            if not user:
                raise Exception("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print(user.driver_balance)
            if operation == '+':
                user.driver_balance += int(amount)
            elif operation == '-':
                user.driver_balance -= int(amount)
            await sess.commit()
            await sess.close()
            await msg.answer('‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!', reply_markup=go_home_admin())
        else:
            raise Exception
    except Exception as err:
        await msg.message.edit_text(f'{err}\n'
                                    'üí≥ –í–≤–µ–¥–∏—Ç–µ –∫–∞–∂–¥—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ:\n'
                                    'üë§ –Ω–∏–∫ –≤–æ–¥–∏—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ @123\n'
                                    '‚ûï‚ûñ –æ–ø–µ—Ä–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ +/-\n'
                                    'üí∞ —Å—É–º–º—É –¥–µ–Ω–µ–≥\n'
                                    'üìù –ü—Ä–∏–º–µ—Ä:\n'
                                    '@123\n'
                                    '+\n'
                                    '1000', reply_markup=go_home_driver())
        await state.set_state(Form.change_balance_driver)


@admin_router.callback_query(F.data == 'block_driver')
async def driver_delete(msg: Message, state: FSMContext):
    await msg.message.edit_text('üö´ –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–æ–¥–∏—Ç–µ–ª—è.\n'
                                'üë§ –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –≤–æ–¥–∏—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ @123', reply_markup=go_home_admin())
    await state.set_state(Form.block_driver)


@admin_router.message(Form.block_driver)
async def driver_delete(msg: Message, state: FSMContext):
    try:
        username = msg.text
        if username:
            sess = await create_session()
            user = await sess.execute(select(User).filter_by(username=username[1:]))
            user = user.scalars().first()
            user.blocked = True
            await sess.commit()
            await sess.close()
            await msg.answer('‚úÖ –í–æ–¥–∏—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!', reply_markup=go_home_admin())
        else:
            raise Exception
    except Exception as err:
        await msg.answer('üö´ –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–æ–¥–∏—Ç–µ–ª—è.\n'
                         'üë§ –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –≤–æ–¥–∏—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ @123', reply_markup=go_home_admin())
        await state.set_state(Form.block_driver)


@admin_router.callback_query(F.data == 'unblock_driver')
async def driver_delete(msg: Message, state: FSMContext):
    await msg.message.edit_text('üîì –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–æ–¥–∏—Ç–µ–ª—è.\n'
                                'üë§ –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –≤–æ–¥–∏—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ @123', reply_markup=go_home_admin())
    await state.set_state(Form.unblock_driver)


@admin_router.message(Form.unblock_driver)
async def driver_delete(msg: Message, state: FSMContext):
    try:
        username = msg.text
        if username:
            sess = await create_session()
            user = await sess.execute(select(User).filter_by(username=username[1:]))
            user = user.scalars().first()
            user.blocked = False
            await sess.commit()
            await sess.close()
            await msg.answer('‚úÖ –í–æ–¥–∏—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!', reply_markup=go_home_admin())
        else:
            raise Exception
    except Exception as err:
        await msg.answer('üîì –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–æ–¥–∏—Ç–µ–ª—è.\n'
                                    'üë§ –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –≤–æ–¥–∏—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ @123', reply_markup=go_home_admin())
        await state.set_state(Form.unblock_driver)
